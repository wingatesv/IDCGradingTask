# -*- coding: utf-8 -*-
"""Form_Cross_Validation_Dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mqBRgAcGMMPnKcIpGagbaUTayIiYSTMG
"""

# import libraries
import numpy as np
import os
import PIL
import PIL.Image
import tensorflow as tf
import matplotlib.pyplot as plt
from google.colab import drive
import pandas as pd
from keras_preprocessing.image import ImageDataGenerator
from sklearn.utils import shuffle 
import sklearn
import sklearn.model_selection

# Connect to drive
drive._mount('/content/drive')

base_path = '/content/drive/MyDrive/Wingates FYP/Dataset/Extra Dataset/Training Set'

# get image file path
from fastai import *
from fastai.vision import *
path = Path(base_path)
file_path=get_files(path, recurse=True)
print(len(file_path)) # To validate equal total number of images

# create a df based on file path and class
pd.set_option("display.max_colwidth", 0)
data = pd.DataFrame(index=np.arange(0, len(file_path)), columns=["path", "grade"])
count = 0

for image_path in file_path:
  path_name = str(image_path)
  grade = str(path_name[71:78])
  
  
  
  data.iloc[count]["path"] = path_name
  
  data.iloc[count]["grade"] = grade

  count +=1

data.head()

data.grade.unique()

data.shape

# shuffle df
data = shuffle(data)
data.head()

# get the label
Y = data[['grade']]
Y

# initialise stratifed kfold
skf = sklearn.model_selection.StratifiedKFold (n_splits = 5, random_state = 123, shuffle = True)

# generate each fold and save as csv
i = 1
for train_index, val_index in skf.split(np.zeros(len(data)),Y):
 training_data = data.iloc[train_index]
 validation_data = data.iloc[val_index]

 training_data.to_csv(f'/content/drive/MyDrive/Wingates FYP/CSV2/training_data_400x{i}.csv')
 validation_data.to_csv(f'/content/drive/MyDrive/Wingates FYP/CSV2/validation_data_400x{i}.csv')
 i+=1